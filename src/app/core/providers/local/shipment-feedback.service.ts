import { Injectable } from '@angular/core';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { Util } from '../../../providers/util.service';
import { Observable } from 'rxjs';
import { GenericResponse } from 'src/app/interfaces/api-service/response/generic-response';
import { HttpContentType } from '../../../types/enum/http-content-type.enum';
import { tap } from 'rxjs/operators';
import { ConfigService } from '@ngx-config/core';
import { ShipmentFeedbackResponse } from 'src/app/interfaces/api-service/response/shipment-feedback-response';

/**
 * This class contains endpoint of Shipment Feedback and Sore
 *
 * Author: Ganesh Dhavale
 *
 * Date Created: Dec 24, 2020
 */

@Injectable()
export class ShipmentFeedbackService {
    private shipmentFeedbackAPI = '';

    constructor(private httpClient: HttpClient,
        private config: ConfigService,
        private util: Util) {
        let SHIPMENTFEEDBACK_API = this.config.getSettings('LOCAL').API_ISLAND.shipmentFeedback;
        this.shipmentFeedbackAPI = this.util.joinStrings('', this.config.getSettings('LOCAL').HOST, SHIPMENTFEEDBACK_API);
    }

    /**
    * This method POST shipping feedback comment, score to local score API
    *
    * @param shipmentId - shipment id generated by create shipment api.
    * @param score - score selected by user.
    * @param comment - comment given by user.
    */
    postShipmentFeedback(_shipmentId, _score, _comment): Observable<GenericResponse<ShipmentFeedbackResponse>> {
        const resourceUrl: string = this.shipmentFeedbackAPI;
        const httpHeaders = this.util.getHttpRequestHeaders(HttpContentType.APPLICATION_JSON, []);
        const requestBody = { shipmentId: _shipmentId, score: _score, comment: _comment };

        return this.httpClient.post<GenericResponse<ShipmentFeedbackResponse>>(resourceUrl, requestBody, httpHeaders).pipe(
            tap(response => {
                if (response instanceof HttpErrorResponse) {
                    return response.error;
                }
            })
        );
    }

}
